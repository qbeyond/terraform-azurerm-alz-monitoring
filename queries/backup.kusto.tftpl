let Tenant = "${tenant}";
let VMs = MonitoringResources_CL 
    | where TimeGenerated > ago(13h)
    | where type_s in~ ("microsoft.compute/virtualmachines", "microsoft.hybridcompute/machines", "microsoft.compute/virtualmachinescalesets")
    | summarize arg_max(TimeGenerated, *) by name_s
    | project
        vmResourceID = ResourceId,
        VMname = tolower(name_s),
        managedby = tags_managedby_s,
        alerting = tags_alerting_s,
        osType = properties_storageProfile_osDisk_osType_s;
AddonAzureBackupJobs
| where JobStatus == "Failed"
| where JobOperation == "Backup"
| extend VMname = tolower(extract(@";(vm-[^;]+)(;|$)", 1, BackupItemUniqueId))
| extend vault = extract("(microsoft.recoveryservices/vaults/)(.+)$", 2, tostring(_ResourceId))
| project
    TimeGenerated,
    JobFailureCode,
    VMname,
    vault,
    _ResourceId,
    JobOperationSubType,
    JobStartDateTime,
    BackupItemUniqueId,
    AdHocOrScheduledJob
| join kind = leftouter(VMs) on $left.VMname == $right.VMname
| where managedby =~ "q.beyond" or isempty(managedby)
| where alerting =~ "enabled" or isempty(alerting)
| extend managedby = iff(isempty(managedby) == true, "n/a", managedby)
| extend _ResourceId = iff(VMname == "", strcat("/SUBSCRIPTIONS/", Tenant, "/RESOURCEGROUPS/BACKUP/PROVIDERS/MICROSOFT.RECOVERYSERVICES/VAULTS"), vmResourceID)
| extend state = "Warning"
| extend monitor_package = case(
                               osType == "Windows",
                               "AZ_SC_ManagedOSWindows",
                               "AZ_SC_ManagedOSLinux"
                           )
| extend monitor_name = "AZ_BACKUP_FAILED"
| extend monitor_description = "Monitors data backup on Azure"
| extend script_name = "n/a"
| extend script_version = "n/a"
| extend threshold = "n/a"
| extend affected_entity = iff(isempty(JobOperationSubType), "Backup failed on JobOperationSubtype: not given", strcat("Backup failed on JobOperationSubtype: ", JobOperationSubType))
| extend additional_information = strcat("Backup failed on ", VMname, ". AdHoc or Scheduled job: ", AdHocOrScheduledJob, ". JobStartDateTime[UTC]: ", JobStartDateTime, ". BackupItemUniqueId: ", BackupItemUniqueId = replace(";", ",", BackupItemUniqueId), ". Recovery Service Vault: ", vault, ". ManagedBy: ", managedby, ".")
| extend Timestamp = now()
| project
    _ResourceId, VMname, BackupItemUniqueId,
    RawData = strcat("TimeGenerated:", Timestamp, ";_ResourceId:", _ResourceId, ";state:", state, ";affected_object:", toupper(VMname), ";monitor_package:", monitor_package, ";monitor_name:", monitor_name, ";monitor_description:", monitor_description, ";script_name:", script_name, ";script_version:", script_version, ";threshold:", threshold, ";value:", JobFailureCode, ";affected_entity:", affected_entity, ";additional_information:", additional_information)
